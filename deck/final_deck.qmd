---
title: "Exploring Police Stop Data in Camden & Philadelphia"
author: "Libby Doyle & Charlotte Pierce"
format: 
  revealjs:
    theme: solarized
---

```{r}
{results="hide"}
library(tidyverse)
library(here)
library(h3)
library(RColorBrewer) 
library(leaflet)
library(sf)

camden_philly_clean <- readRDS(here::here("data", "camden_philly_clean.rds"))

```

## Research Question

::: incremental
-   **RQ:** How do police traffic stops and outcomes vary by demographic groups (i.e. race/ethnicity, age, gender) in two geographically adjacent cities?

-   **Goal:** Help both policymakers and citizens understand what policing looks like in their communities. Accountability in policing is crucial, and information empowers us to act when we can see how inequities manifest, especially between different racial identities.
:::

## Data & Process

We sourced data from the [Stanford Open Policing Project](https://openpolicing.stanford.edu)

![](pics/stanford.png)

## Camden Policy Change

::: columns
::: {.column width="60%"}
In 2012, Camden disbanded its police department to root out corruption and give the city a clean slate to reduce its high rates of violent crime.

Our analysis spans from 2014-2017, after the new police department was built with a more community-focused approach
:::

::: {.column width="40%"}
![](pics/camden_cops){fig-align="center" width="500"} ![](pics/camden_community.png){fig-align="center" width="500"}
:::
:::

# Maps of Police Stops in Camden and Philadelphia

## Police Stops by Outcome, Gender, and Age

::: columns
::: {.column width="33%"}
![Arrests in Philly and Camden](pics/philly_camden_arrest.png){width="427"}
:::

::: {.column width="33%"}
![Male (teal) and female (purple) stops in Camden](pics/camden_gender.png){width="427"}
:::

::: {.column width="33%"}
![Ages 18-24 (green) and 55-64 (blue) in Philly](pics/philly_1824_5564.png){width="448"}
:::
:::

## Police Stops in Philly and Camden by Race

::: columns
::: {.column width="50%"}
![Black stops](pics/philly_camden_black.png){width="238"}

![Black and White stops](pics/philly_camden_black_white.png){width="227"}
:::

::: {.column width="50%"}
![White stops](pics/philly_camden_white.png){width="227"}

![White and Hispanic stops](pics/philly_camden_hispanic_white.png){width="221"}
:::
:::

# A Deeper Dive into Racial Disparities in Police Stops

## Share of Stops by Race/Ethnicity

::: columns
::: {.column width="50%"}
![In **Camden**, Black people make up about 43% of the population but about 47% of stops. White people make up just 5% of the population and are overrepresented in traffic stops.](pics/camden_stack.png)
:::

::: {.column width="50%"}
![In **Philly**, Black people make up about 41% of the population but 60-70% of stops, while White people make up about 36% of the population but less than a quarter of stops.](pics/philly_stack.png)
:::
:::

## Stops of Black and White Drivers per 100 Population

::: columns
::: {.column width="50%"}
![In **Camden**, the black-white disparity between police stops has decreased over time.](pics/camden_line.png)
:::

::: {.column width="50%"}
![But in **Philly**, the disparity has grown.](pics/philly_line.png)
:::
:::


# Stops of Black Drivers in Philadelphia 
```{r}
stops_philly <- camden_philly_clean |>
  filter(location == "philly") |> 
  filter(subject_race == "black") |> 
  select(lat, lng)
  
traffic_stops <- geo_to_h3(stops_philly)

tbl <- table(traffic_stops) %>%
  tibble::as_tibble()

hexagons <- h3_to_geo_boundary_sf(tbl$traffic_stops)  |> 
  dplyr::mutate(index = tbl$traffic_stops, stops = tbl$n)


color_palette <- brewer.pal(30, "Blues")

leaflet(data = hexagons) %>%
  addProviderTiles("OpenStreetMap.Mapnik") %>%
  addPolygons(data = hexagons, 
              fillColor = ~color_palette[cut(stops, breaks = 30)],
              fillOpacity = 0.7, 
              weight = 1,
              color = "black",
              popup = ~paste("<b>Stops:</b>",  format(stops, big.mark = ","))) 

```

# Stops of White Drivers in Philadelphia 
```{r}
stops_philly <- camden_philly_clean |>
  filter(location == "philly") |> 
  filter(subject_race == "white") |> 
  select(lat, lng)

traffic_stops <- geo_to_h3(stops_philly)

tbl <- table(traffic_stops) %>%
  tibble::as_tibble()

hexagons <- h3_to_geo_boundary_sf(tbl$traffic_stops)  |> 
  dplyr::mutate(index = tbl$traffic_stops, stops = tbl$n)

color_palette <- brewer.pal(30, "Blues")

# Create leaflet map
leaflet(data = hexagons) %>%
  addProviderTiles("OpenStreetMap.Mapnik") %>%
  addPolygons(data = hexagons, 
              fillColor = ~color_palette[cut(stops, breaks = 30)],
              fillOpacity = 0.7, 
              weight = 1,
              color = "black",
              popup = ~paste("<b>Stops:</b>",  format(stops, big.mark = ","))) 
```

# Stops of Black Drivers in Camden
```{r}
stops_camden <- camden_philly_clean |>
  filter(location == "camden") |> 
  filter(subject_race == "black") |> 
  select(lat, lng)

traffic_stops <- geo_to_h3(stops_camden)

tbl <- table(traffic_stops) %>%
  tibble::as_tibble()

hexagons <- h3_to_geo_boundary_sf(tbl$traffic_stops)  |> 
  dplyr::mutate(index = tbl$traffic_stops, stops = tbl$n)

color_palette <- brewer.pal(30, "Blues")

# Create leaflet map
leaflet(data = hexagons) %>%
  addProviderTiles("OpenStreetMap.Mapnik") %>%
  addPolygons(data = hexagons, 
              fillColor = ~color_palette[cut(stops, breaks = 30)],
              fillOpacity = 0.7, 
              weight = 1,
              color = "black",
              popup = ~paste("<b>Stops:</b>",  format(stops, big.mark = ","))) 
```

# Stops of White Drivers in Camden

```{r}
stops_camden <- camden_philly_clean |>
  filter(location == "camden") |> 
  filter(subject_race == "white") |> 
  select(lat, lng)

traffic_stops <- geo_to_h3(stops_camden)

tbl <- table(traffic_stops) %>%
  tibble::as_tibble()

hexagons <- h3_to_geo_boundary_sf(tbl$traffic_stops)  |> 
  dplyr::mutate(index = tbl$traffic_stops, stops = tbl$n)

color_palette <- brewer.pal(30, "Blues")

# Create leaflet map
leaflet(data = hexagons) %>%
  addProviderTiles("OpenStreetMap.Mapnik") %>%
  addPolygons(data = hexagons, 
              fillColor = ~color_palette[cut(stops, breaks = 30)],
              fillOpacity = 0.7, 
              weight = 1,
              color = "black",
              popup = ~paste("<b>Stops:</b>",  format(stops, big.mark = ","))) 
```

# Findings

# We made a dashboard!
